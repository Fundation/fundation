'use strict';

const debug = require('debug')('fundation');
const fs = require('fs');
const glob = require("glob");
const path = require('path');
const LRU = require('lru-cache')
const resolve = file => path.resolve(__dirname, file)
const { createBundleRenderer } = require('vue-server-renderer')

const isProd = process.env.NODE_ENV === 'production'

/**
 * Vue
 *
 * @param {Application} app
 * @api private
 */
module.exports = function(app, fundation) {

  debug("Setting up Vue")

  return new Promise(function(resolve, reject){

    const template = fs.readFileSync(path.resolve(__dirname, '../src/index.template.html'), 'utf-8')

    function createRenderer (bundle, options) {
      // https://github.com/vuejs/vue/blob/dev/packages/vue-server-renderer/README.md#why-use-bundlerenderer
      return createBundleRenderer(bundle, Object.assign(options, {
        template,
        // for component caching
        // cache: LRU({
        //   max: 1000,
        //   maxAge: 1000 * 60 * 15
        // }),
        // this is only needed when vue-server-renderer is npm-linked
        basedir: resolve('./dist'),
        // recommended for performance
        runInNewContext: true
      }))
    }

    let renderer
    let readyPromise
    if (isProd) {
      // In production: create server renderer using built server bundle.
      // The server bundle is generated by vue-ssr-webpack-plugin.
      const bundle = require(path.resolve(__dirname,'../../../dist/vue-ssr-server-bundle.json'))
      // The client manifests are optional, but it allows the renderer
      // to automatically infer preload/prefetch links and directly add <script>
      // tags for any async chunks used during render, avoiding waterfall requests.
      const clientManifest = require(path.resolve(__dirname,'../../../dist/vue-ssr-client-manifest.json'))
      app.renderer = createRenderer(bundle, {
        clientManifest
      })
    } else {
      // In development: setup the dev server with watch and hot-reload,
      // and create a new renderer on bundle / index template update.
      readyPromise = require('../build/setup-dev-server')(app, (bundle, options) => {
        app.renderer = createRenderer(bundle, options)
      }).then(function(){
        debug("Finished Vue")
        resolve()
      })
    }
  })
};
